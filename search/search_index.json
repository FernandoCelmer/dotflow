{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to dotflow Getting Help We use GitHub issues for tracking bugs and feature requests and have limited bandwidth to address them. If you need anything, I ask you to please follow our templates for opening issues or discussions. \ud83d\udc1b Bug Report \ud83d\udcd5 Documentation Issue \ud83d\ude80 Feature Request \ud83d\udcac General Question Commit Style \u2699\ufe0f FEATURE \ud83d\udcdd PEP8 \ud83d\udccc ISSUE \ud83e\udeb2 BUG \ud83d\udcd8 DOCS \ud83d\udce6 PyPI \u2764\ufe0f\ufe0f TEST \u2b06\ufe0f CI/CD \u26a0\ufe0f SECURITY License This project is licensed under the terms of the GNU General Public License v3.0.","title":"Home"},{"location":"#welcome-to-dotflow","text":"","title":"Welcome to dotflow"},{"location":"#getting-help","text":"We use GitHub issues for tracking bugs and feature requests and have limited bandwidth to address them. If you need anything, I ask you to please follow our templates for opening issues or discussions. \ud83d\udc1b Bug Report \ud83d\udcd5 Documentation Issue \ud83d\ude80 Feature Request \ud83d\udcac General Question","title":"Getting Help"},{"location":"#commit-style","text":"\u2699\ufe0f FEATURE \ud83d\udcdd PEP8 \ud83d\udccc ISSUE \ud83e\udeb2 BUG \ud83d\udcd8 DOCS \ud83d\udce6 PyPI \u2764\ufe0f\ufe0f TEST \u2b06\ufe0f CI/CD \u26a0\ufe0f SECURITY","title":"Commit Style"},{"location":"#license","text":"This project is licensed under the terms of the GNU General Public License v3.0.","title":"License"},{"location":"nav/getting-started/","text":"Getting Started February 7, 2025 Install To install Dotflow, run the following command from the command line: With Pip pip install dotflow With Poetry poetry add dotflow First Steps The simplest file could look like this: from dotflow import DotFlow, action, retry def callback(**kwargs): print(kwargs) @action @retry(max_retry=1) def my_task(): print(\"task\") workflow.task.add(step=my_task, callback=callback) workflow.start(workflow=workflow).sequential()","title":"Getting Started"},{"location":"nav/getting-started/#getting-started","text":"February 7, 2025","title":"Getting Started"},{"location":"nav/getting-started/#install","text":"To install Dotflow, run the following command from the command line:","title":"Install"},{"location":"nav/getting-started/#with-pip","text":"pip install dotflow","title":"With Pip"},{"location":"nav/getting-started/#with-poetry","text":"poetry add dotflow","title":"With Poetry"},{"location":"nav/getting-started/#first-steps","text":"The simplest file could look like this: from dotflow import DotFlow, action, retry def callback(**kwargs): print(kwargs) @action @retry(max_retry=1) def my_task(): print(\"task\") workflow.task.add(step=my_task, callback=callback) workflow.start(workflow=workflow).sequential()","title":"First Steps"},{"location":"nav/development/development-guide/","text":"Development Guide Commit Style \u2699\ufe0f FEATURE \ud83d\udcdd PEP8 \ud83d\udccc ISSUE \ud83e\udeb2 BUG \ud83d\udcd8 DOCS \ud83d\udce6 PyPI \u2764\ufe0f\ufe0f TEST \u2b06\ufe0f CI/CD \u26a0\ufe0f SECURITY","title":"Development Guide"},{"location":"nav/development/development-guide/#development-guide","text":"","title":"Development Guide"},{"location":"nav/development/development-guide/#commit-style","text":"\u2699\ufe0f FEATURE \ud83d\udcdd PEP8 \ud83d\udccc ISSUE \ud83e\udeb2 BUG \ud83d\udcd8 DOCS \ud83d\udce6 PyPI \u2764\ufe0f\ufe0f TEST \u2b06\ufe0f CI/CD \u26a0\ufe0f SECURITY","title":"Commit Style"},{"location":"nav/development/release-notes/","text":"Release Notes v0.1.0 \ud83d\udce6 PyPI - Build 0.1.0","title":"Release Notes"},{"location":"nav/development/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"nav/development/release-notes/#v010","text":"\ud83d\udce6 PyPI - Build 0.1.0","title":"v0.1.0"},{"location":"nav/learn/approaches/","text":"Mode of Action Sequential Background Parallel Data Storage","title":"Mode of Action"},{"location":"nav/learn/approaches/#mode-of-action","text":"","title":"Mode of Action"},{"location":"nav/learn/approaches/#sequential","text":"","title":"Sequential"},{"location":"nav/learn/approaches/#background","text":"","title":"Background"},{"location":"nav/learn/approaches/#parallel","text":"","title":"Parallel"},{"location":"nav/learn/approaches/#data-storage","text":"","title":"Data Storage"},{"location":"nav/reference/context-class/","text":"Context class Here's the reference information for the Context class, with all its parameters, attributes and functions. Import You can import the Context class directly from dotflow: from dotflow import Context Exemple class dotflow.Context Context( storage={\"data\": [0, 1, 2, 3]} ) Parameters PARAMETER DESCRIPTION * storage Attribute where any type of Python object can be stored. TYPE : Any DEFAULT : None datetime Attribute available only for access; sending this parameter is not allowed. It will be assigned a value at runtime with the current date and time. TYPE : datetime DEFAULT : datetime.now","title":"Context class"},{"location":"nav/reference/context-class/#context-class","text":"Here's the reference information for the Context class, with all its parameters, attributes and functions.","title":"Context class"},{"location":"nav/reference/context-class/#import","text":"You can import the Context class directly from dotflow: from dotflow import Context","title":"Import"},{"location":"nav/reference/context-class/#exemple","text":"class dotflow.Context Context( storage={\"data\": [0, 1, 2, 3]} )","title":"Exemple"},{"location":"nav/reference/context-class/#parameters","text":"PARAMETER DESCRIPTION * storage Attribute where any type of Python object can be stored. TYPE : Any DEFAULT : None datetime Attribute available only for access; sending this parameter is not allowed. It will be assigned a value at runtime with the current date and time. TYPE : datetime DEFAULT : datetime.now","title":"Parameters"},{"location":"nav/reference/dotflow-class/","text":"Dotflow class Here's the reference information for the DotFlow class, with all its parameters, attributes and functions. Import You can import the Dotflow class directly from dotflow: from dotflow import DotFlow Exemple class dotflow.DotFlow DotFlow( title=\"My Workflow\", initial_context={\"data\": [0, 1, 2, 3]} ) Parameters PARAMETER DESCRIPTION title Reference title of the workflow. This title is used for documentation purposes and also for differentiation in contexts where many workflows are being executed. TYPE : string DEFAULT : \"\" initial_context The parameter has the main objective of including initial data in the execution of the workflow. This parameter can be accessed internally to retrieve this information and process it if necessary, according to the logic or objective of the workflow. TYPE : Any DEFAULT : Context Functions task class dotflow.DotFlow.task Function Description add start class dotflow.DotFlow.start Function Description sequential background parallel data_store","title":"Dotflow class"},{"location":"nav/reference/dotflow-class/#dotflow-class","text":"Here's the reference information for the DotFlow class, with all its parameters, attributes and functions.","title":"Dotflow class"},{"location":"nav/reference/dotflow-class/#import","text":"You can import the Dotflow class directly from dotflow: from dotflow import DotFlow","title":"Import"},{"location":"nav/reference/dotflow-class/#exemple","text":"class dotflow.DotFlow DotFlow( title=\"My Workflow\", initial_context={\"data\": [0, 1, 2, 3]} )","title":"Exemple"},{"location":"nav/reference/dotflow-class/#parameters","text":"PARAMETER DESCRIPTION title Reference title of the workflow. This title is used for documentation purposes and also for differentiation in contexts where many workflows are being executed. TYPE : string DEFAULT : \"\" initial_context The parameter has the main objective of including initial data in the execution of the workflow. This parameter can be accessed internally to retrieve this information and process it if necessary, according to the logic or objective of the workflow. TYPE : Any DEFAULT : Context","title":"Parameters"},{"location":"nav/reference/dotflow-class/#functions","text":"","title":"Functions"},{"location":"nav/reference/dotflow-class/#task","text":"class dotflow.DotFlow.task Function Description add","title":"task"},{"location":"nav/reference/dotflow-class/#start","text":"class dotflow.DotFlow.start Function Description sequential background parallel data_store","title":"start"}]}